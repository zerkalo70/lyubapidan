{"version":3,"sources":["Components/Profile/ProfileInfo/profileInfo.module.css","assets/Images/LogoF2.jpg","Components/Profile/MyPosts/myPosts.module.css","Components/Profile/MyPosts/Post/post.module.css","Components/Profile/MyPosts/Post/Women1.jpg","Components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","Components/Profile/ProfileInfo/ProfileDataForm.tsx","Components/Profile/ProfileInfo/profileInfo.tsx","Components/Profile/MyPosts/Post/post.tsx","Components/Profile/MyPosts/myPosts.tsx","Components/Profile/MyPosts/myPostsContainer.tsx","Components/Profile/profile.tsx","Components/Profile/profileContainer.tsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","s","formSummaryError","createField","Input","type","lookingForAJob","Textarea","aboutMe","Object","keys","contacts","map","key","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","profileInfo","main","src","LogoF2","alt","descriptionBlock","photos","large","Women3","target","files","length","initialValues","formData","then","Post","post","Women1","message","likesCount","MyPosts","React","memo","postElements","posts","reverse","p","id","createRef","postsBlock","AddNewPostFormRedux","values","addPost","newPostText","maxLength10","maxLengthCreator","Field","name","component","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostAC","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","withAuthRedirect","withRouter","auth","isAuth"],"mappings":"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","file":"static/js/3.afefeb8d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"profileInfo_profileInfo__3r8on\",\"descriptionBlock\":\"profileInfo_descriptionBlock__24mrV\",\"NoPhoto\":\"profileInfo_NoPhoto__10q2t\"};","module.exports = __webpack_public_path__ + \"static/media/LogoF2.2952645f.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"myPosts_postsBlock__12CUv\",\"posts\":\"myPosts_posts__3wr60\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"post_post__3BeDl\"};","module.exports = __webpack_public_path__ + \"static/media/Women1.c5901a19.jpg\";","import React, {useEffect, useState} from \"react\";\r\n\r\n\r\nconst ProfileStatusWithHooks = (props: any) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e: any) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <b>Status:</b> <span onDoubleClick={activateEditMode}>{props.status || \"No Status\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true}\r\n                       onBlur={deactivateEditMode}\r\n                       onChange={onStatusChange}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport s from \"./profileInfo.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}: any) => {\r\n    return  <form onSubmit={handleSubmit}>\r\n        <div><button>save</button></div>\r\n        {error && <div className={s.formSummaryError}>\r\n            {error}\r\n        </div>}\r\n        <div>\r\n            <b>Full name</b>:\r\n            {createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>:\r\n            {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n        </div>\r\n\r\n        <div>\r\n            <b>My professional skills</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n            {createField(\"My professional skills\", \"lookingForAJobDescription\",\r\n                [], Textarea)}\r\n        </div>\r\n\r\n        <div>\r\n            <b>About me</b>: {profile.aboutMe}\r\n            {createField(\"About me\", \"about me\",\r\n                [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={s.contact}>\r\n                <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n            </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm: any = reduxForm({form: 'edit-profile'}) (ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;\r\n// export default ProfileDataForm;","import React, {useState} from \"react\";\r\nimport s from \"./profileInfo.module.css\";\r\nimport LogoF2 from \"../../../assets/Images/LogoF2.jpg\";\r\nimport Preloader from \"../../common/Preloader/preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport Women3 from \"../../../assets/Images/Women3.jpg\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}: any) => {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e: any) => {\r\n        if (e. target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData: any) => {\r\n        saveProfile(formData). then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={s.profileInfo}>\r\n            <div>\r\n                <img className={s.main} src={LogoF2} alt=\"iso\"/>\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || Women3} alt=\"No Photo\"/>\r\n                {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData goToEditMode={() => {setEditMode(true)}}\r\n                                   profile={profile} isOwner={isOwner}/>}\r\n\r\n                <ProfileStatusWithHooks status={status}\r\n                updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst ProfileData = ({profile, isOwner, goToEditMode}: any) => {\r\n    return (\r\n        <div>\r\n            {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\r\n            <div>\r\n                <b>Full name</b>: {profile.fullName}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n            <div>\r\n                <b>My professional skills</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n            </div>\r\n            }\r\n            <div>\r\n                <b>About me</b>: {profile.aboutMe}\r\n            </div>\r\n            <div>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <Contact contactTitle={key} contactValue={profile.contacts[key]}/>\r\n            })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}: any) => {\r\n    return <div><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport s from \"./post.module.css\";\r\nimport Women1 from \"./Women1.jpg\";\r\n\r\ntype PostPropsType = {\r\n    message: string\r\n    likesCount: number\r\n    id: number\r\n}\r\n\r\nconst Post = (props: PostPropsType) => {\r\n    return (\r\n        <div className={s.post}>\r\n            <img src={Women1} alt=\"iso\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>Likes:{props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from \"./myPosts.module.css\";\r\nimport Post from \"./Post/post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\nconst MyPosts = React.memo((props: any) => {\r\n\r\n    let postElements =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map(p => <Post key={p.id} id={p.id} message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef<HTMLTextAreaElement>();\r\n\r\n    const onAddPost = (values: any) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props:any) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={\"newPostText\"}\r\n                       component={Textarea}\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostAC} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./myPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        addPost: (newPostText: any) => {\r\n            dispatch(addPostAC(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport s from \"./profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/profileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/myPostsContainer\";\r\n\r\n\r\nconst Profile = (props: any) => {\r\n\r\n    return (\r\n        <div className={s.profile}>\r\n            <ProfileInfo savePhoto={props.savePhoto}\r\n                         isOwner={props.isOwner}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         saveProfile={props.saveProfile}\r\n                         updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component<any, any> {\r\n\r\n    refreshProfile() {\r\n        let userId: any = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<any>, prevState: Readonly<any>, snapshot?: any) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}/>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps: any = (state: any) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    withRouter,\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile})\r\n)(ProfileContainer);"],"sourceRoot":""}