{"version":3,"sources":["Components/Dialogs/DialogItem/Message/message.module.css","Components/Users/users.module.css","assets/Images/Women3.jpg","assets/Images/loading5.gif","Components/common/Preloader/preloader.module.css","Components/Profile/MyPosts/Post/post.module.css","Components/Profile/MyPosts/Post/Women1.jpg","Components/Header/Images/LogoF1.png","serviceWorker.ts","api/api.ts","redux/profileReducer.ts","redux/dialogsReducer.ts","redux/sidebarReducer.ts","utils/objectHelpers.ts","redux/usersReducer.ts","redux/authReducer.ts","redux/appReducer.ts","redux/reduxStore.ts","Components/Footer/footer.tsx","Components/Navigation/nav.tsx","Components/Dialogs/DialogItem/dialogItem.tsx","Components/Dialogs/DialogItem/Message/message.tsx","utils/validators/validators.ts","Components/common/FormsControls/FormsControls.tsx","Components/Dialogs/AddMessageForm/AddMessageForm.tsx","Components/Dialogs/dialogs.tsx","hoc/withAuthRedirect.tsx","Components/Dialogs/dialogsContainer.tsx","Components/common/Paginator/Paginator.tsx","Components/Users/user.tsx","Components/Users/users.tsx","Components/common/Preloader/preloader.tsx","redux/usersSelectors.ts","Components/Users/usersContainer.tsx","Components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","Components/Profile/ProfileInfo/profileInfo.tsx","Components/Profile/MyPosts/Post/post.tsx","Components/Profile/MyPosts/myPosts.tsx","Components/Profile/MyPosts/myPostsContainer.tsx","Components/Profile/profile.tsx","Components/Profile/profileContainer.tsx","Components/Header/header.tsx","Components/Header/headerContainer.tsx","Components/Login/login.tsx","App.tsx","index.tsx","Components/Navigation/nav.module.css","Components/common/FormsControls/FormsControls.module.css","Components/Dialogs/dialogs.module.css","Components/common/Paginator/Paginator.module.css","Components/Dialogs/DialogItem/dialogItem.module.css","Components/Profile/ProfileInfo/profileInfo.module.css","Components/Profile/MyPosts/myPosts.module.css","Components/Header/header.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","initialState","posts","id","message","likesCount","profile","setStatus","type","profileReducer","state","action","newPost","newPostText","dialogs","name","messages","dialogsReducer","body","newMessageBody","sidebarReducer","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","count","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","filter","SET_USER_DATA","login","isAuth","setAuthUserData","payload","getAuthUserData","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","sidebar","usersPage","auth","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","Footer","className","s","footer","Nav","nav","item","to","activeClassName","active","DialogItem","props","path","dialog","Message","dialogItem","required","value","maxLengthCreator","maxLength","length","FormControl","input","meta","touched","error","children","hasError","formControl","Textarea","restProps","child","Input","createField","placeholder","validators","component","text","Field","validate","maxLength50","reduxForm","onSubmit","handleSubmit","Dialogs","dialogsElement","d","messagesElement","m","dialogsItems","values","sendMessage","mapStateToPropsForRedirect","withAuthRedirect","Component","RedirectComponent","this","React","connect","compose","sendMessageAC","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","p","cn","selectedPage","pageNumber","key","e","User","user","src","photos","small","Women3","alt","styles","userPhoto","disabled","some","Users","Preloader","preloader","loading5","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","bind","page","totalCount","ProfileStatusWithHooks","editMode","setEditMode","useEffect","onDoubleClick","autoFocus","onBlur","onChange","currentTarget","ProfileInfo","profileInfo","descriptionBlock","large","Post","Women1","MyPosts","memo","postElement","createRef","postsBlock","AddNewPostFormRedux","addPost","maxLength10","MyPostsContainer","addPostAC","Profile","ProfileContainer","params","authorizedUserId","history","getUserProfile","withRouter","Header","headerImg","LogoF1","loginBlock","logout","HeaderContainer","LoginReduxForm","formSummaryError","stopSubmit","_error","formData","App","initializeApp","render","promise","Promise","all","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.f3dc9715.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"message_message__3BpLt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__1tEe4\"};","module.exports = __webpack_public_path__ + \"static/media/Women3.2574b695.jpg\";","module.exports = __webpack_public_path__ + \"static/media/loading5.1fd5be2e.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"preloader_preloader__2CynD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"post_post__3BeDl\"};","module.exports = __webpack_public_path__ + \"static/media/Women1.c5901a19.jpg\";","module.exports = __webpack_public_path__ + \"static/media/LogoF1.48d09aeb.png\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"bf102d8c-cfd2-4d9c-a6c8-a4c689dcc873\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: any, pageSize: any) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then((response: any) => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId: any) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId: any) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId: any) {\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: any) {\r\n        return instance.get('profile/' + userId);\r\n    },\r\n    getStatus(userId: any) {\r\n        return instance.get('profile/status/' + userId);\r\n    },\r\n    updateStatus(status: any) {\r\n        return instance.put('profile/status', {status: status});\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`, {});\r\n    },\r\n    login(email: any, password: any, rememberMe: any = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\n","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nexport type ProfileActionsTypes = ReturnType<typeof addPostAC>\r\n\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\n\r\nlet initialState: any = {\r\n    posts: [\r\n        {id: 1, message: 'Привет', likesCount: 12},\r\n        {id: 2, message: 'Это мой первый пост!', likesCount: 21}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n}\r\n\r\nconst profileReducer = (state = initialState, action: ProfileActionsTypes) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            const newPost: any = {\r\n                id: 3,\r\n                message: action.newPostText,\r\n                likesCount: 10\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: \"\"\r\n            };\r\n\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return {...state, profile: action.profile}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPostAC: any = (newPostText: any) => ({type: ADD_POST, newPostText}) as const\r\nexport const setUserProfile: any = (profile: any) => ({type: SET_USER_PROFILE, profile}) as const\r\nexport const setStatus: any = (status: any) => ({type: SET_STATUS, status}) as const\r\nexport const getUserProfile: any = (userId: any) => async (dispatch: any) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\nexport const getStatus: any = (userId: any) => async (dispatch: any) => {\r\n    const response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\nexport const updateStatus: any = (status: any) => async (dispatch: any) => {\r\n    const response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\nexport default profileReducer;","\r\n\r\nexport type DialogsActionsTypes = ReturnType<typeof sendMessageAC>\r\n\r\nconst SEND_MESSAGE = \"SEND-MESSAGE\";\r\n\r\nlet initialState: any= {\r\n    dialogs: [\r\n        {id: 1, name: 'Люба'},\r\n        {id: 2, name: 'Маша'},\r\n        {id: 3, name: 'Даша'}\r\n    ],\r\n\r\n    messages: [\r\n        {id: 1, message: 'Я Вас приветствую!'},\r\n        {id: 2, message: 'Привет!'},\r\n        {id: 3, message: 'Здорово!'}\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action: DialogsActionsTypes) => {\r\n\r\nswitch (action.type) {\r\n\r\n    case SEND_MESSAGE:\r\n        let body = action.newMessageBody;\r\n        return {\r\n            ...state,\r\n        messages: [...state.messages, {id: 6, message: body}]\r\n        };\r\n\r\n    default:\r\n        return state\r\n    }\r\n}\r\nexport const sendMessageAC = (newMessageBody: any) => {\r\n    return {\r\n        type: \"SEND-MESSAGE\", newMessageBody\r\n    } as const\r\n}\r\n\r\n\r\nexport default dialogsReducer;","\r\n\r\nlet initialState = {}\r\n\r\nconst sidebarReducer = (state = initialState, action: any) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","\r\nexport const updateObjectInArray = (items: any, itemId: any, objPropName: any, newObjProps: any) => {\r\n    return items.map((u: any) => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","\r\nimport {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/objectHelpers\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\nlet initialState: any = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state: any = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId,\r\n                    \"id\", {followed: true})\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId,\r\n                    \"id\", {followed: false})\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state, users: action.users\r\n            }\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state, totalUsersCount: action.count\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n            case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter((id: any) => id != action.userId)\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const followSuccess: any = (userId: any) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess: any = (userId: any) => ({type: UNFOLLOW, userId});\r\nexport const setUsers: any = (users: any) => ({type: SET_USERS, users});\r\nexport const setCurrentPage: any = (currentPage: any) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount: any = (totalUsersCount: any) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const toggleIsFetching: any = (isFetching: any) => ({type: TOGGLE_IS_FETCHING, count: isFetching});\r\nexport const toggleFollowingProgress: any = (isFetching: any, userId: any) =>\r\n    ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId});\r\n\r\nexport const requestUsers = (page: any, pageSize: any) => {\r\n    return async (dispatch: any) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(page));\r\n\r\n    let data = await usersAPI.getUsers(page, pageSize);\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch: any, userId: any, apiMethod: any, actionCreator: any) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    const response = await apiMethod(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId: any) => {\r\n    return async (dispatch: any) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\nexport const unfollow = (userId: any) => {\r\n    return async (dispatch: any) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\nconst SET_USER_DATA = \"lyubapidan/auth/SET_USER_DATA\";\r\n\r\nlet initialState: any = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state: any = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData: any = (userId: any, email: any, login: any, isAuth: any) =>\r\n    ({type: SET_USER_DATA, payload: {userId, email, login, isAuth}});\r\n\r\nexport const getAuthUserData: any = () => async (dispatch: any) => {\r\n    const response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login: any = (email: any, password: any, rememberMe: any) => async (dispatch: any) => {\r\n    const response = await authAPI.login(email, password, rememberMe);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0\r\n            ? response.data.messages[0]\r\n            : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\nexport const logout: any = () => async (dispatch: any) => {\r\n    const response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","import {getAuthUserData} from \"./authReducer\";\r\n\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\r\n\r\nlet initialState: any = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state: any = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess: any = () => ({type: INITIALIZED_SUCCESS});\r\nexport const initializeApp: any = () => (dispatch: any) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n}\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport sidebarReducer from \"./sidebarReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import React from \"react\";\r\nimport s from \"./footer.module.css\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p className={s.footer}>© Петров С.В.</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport s from \"./nav.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Nav = () => {\r\n    return (\r\n            <div className={s.nav}>\r\n                <ul className={s.item}>\r\n                    <li>\r\n                        <NavLink to = {\"/profile\"} activeClassName={s.active}>\r\n                            Профиль</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to = {\"/dialogs\"} activeClassName={s.active}>\r\n                            Сообщения</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to = {\"/users\"} activeClassName={s.active}>\r\n                            Пользователи</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <a>Музыка</a>\r\n                    </li>\r\n                    <li>\r\n                        <a>Настройки</a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React from \"react\";\r\nimport s from \"./dialogItem.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport type DialogItemPropsType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nconst DialogItem = (props: any) => {\r\n\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog + \" \" + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from \"./message.module.css\";\r\n\r\nexport type MessagePropsType = {\r\n    message: string\r\n}\r\n\r\nconst Message = (props: MessagePropsType) => {\r\n    return (\r\n        <div className={s.dialogItem}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","export const required = (value: any) => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\nexport const maxLengthCreator = (maxLength: any) => (value: any) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","import React from \"react\";\r\nimport s from \"./FormsControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}: any) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props: any) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props: any) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder: any, name: any, validators: any,\r\n                            component: any, props: any = {}, text: any = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}/> {text}\r\n    </div>\r\n)\r\n\r\n","import React from \"react\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props: any) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required, maxLength50]}\r\n                       name={\"newMessageBody\"}\r\n                       placeholder={\"Enter your message\"}/>\r\n            </div>\r\n            <div><button>Send</button></div>\r\n        </form>\r\n    )\r\n}\r\nexport default reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);\r\n","import React from \"react\";\r\nimport s from \"./dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/dialogItem\";\r\nimport Message from \"./DialogItem/Message/message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\n\r\n\r\nconst Dialogs = (props: any) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElement = state.dialogs.map(\r\n        (d: any) => <DialogItem name={d.name} id={d.id}/>);\r\n    let messagesElement = state.messages.map(\r\n        (m: any) => <Message message={m.message}/>);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values: any) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"}/>\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElement}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElement}</div>\r\n\r\n            </div>\r\n            <AddMessageForm onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state: any) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component: any) => {\r\n    class RedirectComponent extends React.Component<any, any> {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\"/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from \"react\";\r\nimport {sendMessageAC} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state: any) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        sendMessage: (newMessageBody: any) => {\r\n            dispatch(sendMessageAC(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(Dialogs);\r\n\r\n","import React, {useState} from \"react\";\r\nimport s from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}: any) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className={s.paginator}>\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => {setPortionNumber(portionNumber - 1)}}>PREV</button>}\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p) => {\r\n                    return <span className={cn({\r\n                        [s.selectedPage]: currentPage === p\r\n                    }, s.pageNumber)}\r\n                                 key={p}\r\n                                 onClick={(e) => {\r\n                                     onPageChanged(p);\r\n                                 }}>{p}</span>\r\n\r\n                })}\r\n            {portionCount > portionNumber &&\r\n            <button onClick={() => {setPortionNumber(portionNumber + 1)}}>NEXT</button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator;","import React from \"react\";\r\nimport styles from \"./users.module.css\";\r\nimport Women3 from \"../../assets/Images/Women3.jpg\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}: any) => {\r\n\r\n    return (\r\n        <div>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={'/profile/' + user.id}>\r\n                            <img src={user.photos.small != null ? user.photos.small : Women3} alt=\"iso\"\r\n                                 className={styles.userPhoto}/>\r\n                                 </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {user.followed\r\n                                ? <button disabled={followingInProgress.some((id: any) => id === user.id)}\r\n                                          onClick={() => {\r\n                                              unfollow(user.id);\r\n                                          }}>Unfollow</button>\r\n                                : <button disabled={followingInProgress.some((id: any) => id === user.id)}\r\n                                          onClick={() => {\r\n                                              follow(user.id);\r\n                                          }}>follow</button>}\r\n                        </div>\r\n                    </span>\r\n            <span>\r\n                        <span>\r\n                            <div>{user.name}</div>\r\n                            <div>{user.status}</div>\r\n                        </span>\r\n                        <span>\r\n                            <div>{\"user.location.country\"}</div>\r\n                            <div>{\"user.location.city\"}</div>\r\n                        </span>\r\n                    </span>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default User;","import React from \"react\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./user\";\r\n\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}: any) => {\r\n\r\n    return (\r\n        <div>\r\n            <Paginator currentPage={currentPage}\r\n                       onPageChanged={onPageChanged}\r\n                       totalItemsCount={totalUsersCount}\r\n                       pageSize={pageSize}/>\r\n            <div>\r\n                {\r\n                    users.map((u: any) => <User user={u}\r\n                                                followingInProgress={props.followingInProgress}\r\n                                                key={u.id}\r\n                                                unfollow={props.unfollow}\r\n                                                follow={props.follow}/>)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import React from \"react\";\r\nimport loading5 from \"../../../assets/Images/loading5.gif\";\r\nimport s from \"./preloader.module.css\"\r\n\r\nlet Preloader: any = () => {\r\n    return <div className={s.preloader}>\r\n        <img src={loading5} alt=\"iso\"/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","export const getUsers = (state: any) => {\r\n    return state.usersPage.users;\r\n}\r\nexport const getPageSize = (state: any) => {\r\n    return state.usersPage.pageSize;\r\n}\r\nexport const getTotalUsersCount = (state: any) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\nexport const getCurrentPage = (state: any) => {\r\n    return state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching = (state: any) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state: any) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow, setCurrentPage,\r\n    unfollow, toggleFollowingProgress, requestUsers\r\n} from \"../../redux/usersReducer\";\r\nimport Users from \"./users\";\r\nimport Preloader from \"../common/Preloader/preloader\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/usersSelectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component<any, any> {\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber: any) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                followingInProgress={this.props.followingInProgress}/>\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: any) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps,\r\n    {follow, unfollow, setCurrentPage,\r\n    toggleFollowingProgress, getUsers: requestUsers })\r\n\r\n)(UsersContainer);\r\n","import React, {useEffect, useState} from \"react\";\r\n\r\n\r\nconst ProfileStatusWithHooks = (props: any) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e: any) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"No Status\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true}\r\n                       onBlur={deactivateEditMode}\r\n                       onChange={onStatusChange}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from \"./profileInfo.module.css\";\r\nimport LogoF2 from \"../../../assets/Images/LogoF2.jpg\";\r\nimport Preloader from \"../../common/Preloader/preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}: any) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div className={s.profileInfo}>\r\n            {/*<div>*/}\r\n            {/*    <img className={s.main} src={LogoF2} alt=\"iso\"/>*/}\r\n            {/*</div>*/}\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large} alt=\"No Photo\"/>\r\n                <ProfileStatusWithHooks status={status}\r\n                updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport s from \"./post.module.css\";\r\nimport Women1 from \"./Women1.jpg\";\r\n\r\ntype PostPropsType = {\r\n    message: string\r\n    likesCount: number\r\n    id: number\r\n}\r\n\r\nconst Post = (props: PostPropsType) => {\r\n    return (\r\n        <div className={s.post}>\r\n            <img src={Women1} alt=\"iso\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>Likes:{props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from \"./myPosts.module.css\";\r\nimport Post from \"./Post/post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\nconst MyPosts = React.memo((props: any) => {\r\n\r\n    let postElement = props.posts.map(\r\n        (p: any) => <Post key={p.id} id={p.id} message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef<HTMLTextAreaElement>();\r\n\r\n    const onAddPost = (values: any) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postElement}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props:any) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={\"newPostText\"}\r\n                       component={Textarea}\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostAC} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./myPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        addPost: (newPostText: any) => {\r\n            dispatch(addPostAC(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport s from \"./profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/profileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/myPostsContainer\";\r\n\r\n\r\nconst Profile = (props: any) => {\r\n\r\n    return (\r\n        <div className={s.profile}>\r\n            <ProfileInfo profile={props.profile}\r\n            status={props.status}\r\n            updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component<any, any> {\r\n\r\n    componentDidMount() {\r\n        let userId: any = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps: any = (state: any) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    withRouter,\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus})\r\n)(ProfileContainer);","import LogoF1 from \"./Images/LogoF1.png\";\r\nimport React from \"react\";\r\nimport s from \"./header.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header: any = (props: any) => {\r\n    return (\r\n        <header>\r\n            <div>\r\n                <img className={s.headerImg} src={LogoF1} alt=\"iso\"/>\r\n                <div className={s.loginBlock}>\r\n                    {props.isAuth\r\n                        ? <div>{props.login} - <button onClick={props.logout}>Logout</button></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport Header from \"./header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/authReducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component<any, any> {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\nconst mapStateToProps = (state: any) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from \"./../common/FormsControls/FormsControls.module.css\"\r\n\r\nconst LoginForm = ({handleSubmit, error}: any) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n\r\n                {createField(\"email\", \"email\", [required], Input, {})}\r\n                {createField(\"Password\", \"password\", [required], Input,\r\n                    {type: \"password\"})}\r\n                    {createField(null, \"rememberMe\", [], Input,\r\n                    {type: \"checkbox\"}, \"remember me\")}\r\n\r\n            {error && <div className={s.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst Login = (props: any) => {\r\n    const onSubmit = (formData: any) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>LOGIN</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, {login})(Login);","import React from 'react';\r\nimport './App.css';\r\nimport Footer from \"./Components/Footer/footer\";\r\nimport Nav from \"./Components/Navigation/nav\";\r\nimport {Route} from \"react-router-dom\";\r\nimport DialogsContainer from \"./Components/Dialogs/dialogsContainer\";\r\nimport UsersContainer from \"./Components/Users/usersContainer\";\r\nimport ProfileContainer from \"./Components/Profile/profileContainer\";\r\nimport HeaderContainer from \"./Components/Header/headerContainer\";\r\nimport Login from \"./Components/Login/login\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {initializeApp} from \"./redux/appReducer\";\r\nimport Preloader from \"./Components/common/Preloader/preloader\";\r\n\r\nclass App extends React.Component<any, any> {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <div className=\"lyubaProject\">\r\n                <HeaderContainer/>\r\n                <Nav/>\r\n                <div className=\"lyubaProjectContent\">\r\n\r\n                    <Route path='/profile/:userId?'\r\n                           render={() => <ProfileContainer/>}/>\r\n\r\n                    <Route path='/dialogs'\r\n                           render={() => <DialogsContainer/>}/>\r\n\r\n                    <Route path='/users'\r\n                           render={() => <UsersContainer/>}/>\r\n\r\n                    <Route path='/login'\r\n                           render={() => <Login/>}/>\r\n\r\n                </div>\r\n                <Footer/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nexport default compose<any>(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n","import React from 'react';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from \"./redux/reduxStore\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n    ReactDOM.render(\r\n        <BrowserRouter>\r\n        <React.StrictMode>\r\n            <Provider store={store}>\r\n            <App/>\r\n            </Provider>\r\n        </React.StrictMode>\r\n        </BrowserRouter>, document.getElementById('root')\r\n    );\r\n\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"nav_nav__Et1Bj\",\"item\":\"nav_item__3xsM5\",\"active\":\"nav_active__3a-2j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__38Qy8\",\"error\":\"FormsControls_error__3PUh4\",\"formSummaryError\":\"FormsControls_formSummaryError__3V1nd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"dialogs_dialogs__3GW9J\",\"dialogsItems\":\"dialogs_dialogsItems__3COTy\",\"active\":\"dialogs_active__1CNOb\",\"dialogItem\":\"dialogs_dialogItem__15yip\",\"messages\":\"dialogs_messages__1cNZ0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__3ANv7\",\"pageNumber\":\"Paginator_pageNumber__1u7Wo\",\"selectedPage\":\"Paginator_selectedPage__1ka_0\",\"Page\":\"Paginator_Page__2ppx8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"dialogItem_dialogs__61QXa\",\"active\":\"dialogItem_active__3C-MD\",\"dialog\":\"dialogItem_dialog__3bXEd\",\"messages\":\"dialogItem_messages__qgltT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"profileInfo_profileInfo__3r8on\",\"descriptionBlock\":\"profileInfo_descriptionBlock__24mrV\",\"NoPhoto\":\"profileInfo_NoPhoto__10q2t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"myPosts_postsBlock__12CUv\",\"posts\":\"myPosts_posts__3wr60\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerImg\":\"header_headerImg__1fXoA\",\"loginBlock\":\"header_loginBlock__uq75i\"};"],"sourceRoot":""}