{"version":3,"sources":["Components/Profile/ProfileInfo/profileInfo.module.css","Components/Profile/MyPosts/myPosts.module.css","Components/Profile/MyPosts/Post/post.module.css","Components/Profile/MyPosts/Post/Women1.jpg","Components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","Components/Profile/ProfileInfo/profileInfo.tsx","Components/Profile/MyPosts/Post/post.tsx","Components/Profile/MyPosts/myPosts.tsx","Components/Profile/MyPosts/myPostsContainer.tsx","Components/Profile/profile.tsx","Components/Profile/profileContainer.tsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","profile","className","s","profileInfo","descriptionBlock","src","photos","large","alt","Post","post","Women1","message","likesCount","MyPosts","React","memo","postElement","posts","map","p","key","id","createRef","postsBlock","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","name","component","Textarea","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostAC","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","withAuthRedirect","withRouter","auth","isAuth"],"mappings":"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","file":"static/js/3.190ecbdf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"profileInfo_profileInfo__3r8on\",\"descriptionBlock\":\"profileInfo_descriptionBlock__24mrV\",\"NoPhoto\":\"profileInfo_NoPhoto__10q2t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"myPosts_postsBlock__12CUv\",\"posts\":\"myPosts_posts__3wr60\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"post_post__3BeDl\"};","module.exports = __webpack_public_path__ + \"static/media/Women1.c5901a19.jpg\";","import React, {useEffect, useState} from \"react\";\r\n\r\n\r\nconst ProfileStatusWithHooks = (props: any) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e: any) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"No Status\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true}\r\n                       onBlur={deactivateEditMode}\r\n                       onChange={onStatusChange}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from \"./profileInfo.module.css\";\r\nimport LogoF2 from \"../../../assets/Images/LogoF2.jpg\";\r\nimport Preloader from \"../../common/Preloader/preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}: any) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div className={s.profileInfo}>\r\n            {/*<div>*/}\r\n            {/*    <img className={s.main} src={LogoF2} alt=\"iso\"/>*/}\r\n            {/*</div>*/}\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large} alt=\"No Photo\"/>\r\n                <ProfileStatusWithHooks status={status}\r\n                updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport s from \"./post.module.css\";\r\nimport Women1 from \"./Women1.jpg\";\r\n\r\ntype PostPropsType = {\r\n    message: string\r\n    likesCount: number\r\n    id: number\r\n}\r\n\r\nconst Post = (props: PostPropsType) => {\r\n    return (\r\n        <div className={s.post}>\r\n            <img src={Women1} alt=\"iso\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>Likes:{props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from \"./myPosts.module.css\";\r\nimport Post from \"./Post/post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\nconst MyPosts = React.memo((props: any) => {\r\n\r\n    let postElement = props.posts.map(\r\n        (p: any) => <Post key={p.id} id={p.id} message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef<HTMLTextAreaElement>();\r\n\r\n    const onAddPost = (values: any) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postElement}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props:any) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={\"newPostText\"}\r\n                       component={Textarea}\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostAC} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./myPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        addPost: (newPostText: any) => {\r\n            dispatch(addPostAC(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport s from \"./profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/profileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/myPostsContainer\";\r\n\r\n\r\nconst Profile = (props: any) => {\r\n\r\n    return (\r\n        <div className={s.profile}>\r\n            <ProfileInfo profile={props.profile}\r\n            status={props.status}\r\n            updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component<any, any> {\r\n\r\n    componentDidMount() {\r\n        let userId: any = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps: any = (state: any) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    withRouter,\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus})\r\n)(ProfileContainer);"],"sourceRoot":""}