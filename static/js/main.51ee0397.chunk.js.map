{"version":3,"sources":["Components/Navigation/nav.module.css","Components/Profile/profile.module.css","Components/Header/Images/LogoF1.png","Components/Header/header.module.css","Components/Profile/Images/LogoF2.jpg","Components/Profile/MyPosts/myPosts.module.css","Components/Profile/MyPosts/Post/post.module.css","Components/Profile/MyPosts/Post/Women1.jpg","Components/Header/header.tsx","Components/Footer/footer.tsx","Components/Navigation/nav.tsx","Components/Profile/MyPosts/Post/post.tsx","Components/Profile/MyPosts/myPosts.tsx","Components/Profile/profile.tsx","Components/Dialogs/dialogs.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","className","s","headerImg","src","LogoF1","alt","Footer","footer","Nav","nav","item","to","activeClassName","active","Post","props","post","Women1","message","MyPosts","myPosts","Profile","profile","main","LogoF2","Dialogs","dialogs","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"+FACAA,EAAOC,QAAU,CAAC,IAAM,iBAAiB,KAAO,kBAAkB,OAAS,sB,oBCA3ED,EAAOC,QAAU,CAAC,QAAU,2B,mBCD5BD,EAAOC,QAAU,IAA0B,oC,gBCC3CD,EAAOC,QAAU,CAAC,UAAY,4B,mCCD9BD,EAAOC,QAAU,IAA0B,oC,gBCC3CD,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,KAAO,qB,gBCDzBD,EAAOC,QAAU,IAA0B,oC,yNCc5BC,MAVf,WACI,OACI,gCACI,6BACI,yBAAKC,UAAWC,IAAEC,UAAWC,IAAKC,IAAQC,IAAI,W,iBCG/CC,MARf,WACI,OACI,gCACI,uBAAGN,UAAWC,IAAEM,QAAhB,8D,uBCsBGC,MAxBf,WACI,OACQ,yBAAKR,UAAWC,IAAEQ,KACd,wBAAIT,UAAWC,IAAES,MACb,4BACI,kBAAC,IAAD,CAASC,GAAK,WAAWC,gBAAiBX,IAAEY,QAA5C,+CAEJ,4BACI,kBAAC,IAAD,CAASF,GAAK,WAAWC,gBAAiBX,IAAEY,QAA5C,2DAEJ,4BACI,0EAEJ,4BACI,oEAEJ,4BACI,yF,qFCJTC,MATf,SAAcC,GACV,OACY,yBAAKf,UAAWC,IAAEe,MACd,yBAAKb,IAAKc,IAAQZ,IAAI,QACjBU,EAAMG,UCQhBC,MAhBf,WACI,OACI,yBAAKnB,UAAWC,IAAEmB,SACd,wCACA,6BACZ,uCACgB,6CAEJ,6BACI,kBAAC,EAAD,CAAMF,QAAU,8EAChB,kBAAC,EAAD,CAAMA,QAAU,6CCKjBG,MAdf,WACI,OACI,yBAAKrB,UAAWC,IAAEqB,SACd,6BACI,yBAAKtB,UAAWC,IAAEsB,KAAMpB,IAAKqB,IAAQnB,IAAI,SAE7C,kDAGA,kBAAC,EAAD,Q,iBCHGoB,MARf,WACI,OACI,yBAAKzB,UAAWC,IAAEyB,SAAlB,Y,OCsBOC,MAlBf,WACI,OACI,kBAAC,IAAD,KACA,yBAAK3B,UAAU,gBACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,yBAAKA,UAAU,uBACX,kBAAC,IAAD,CAAO4B,KAAK,WAAWC,UAAWR,IAClC,kBAAC,IAAD,CAAOO,KAAK,WAAWC,UAAWJ,KAItC,kBAAC,EAAD,SCTQK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAM7B,c","file":"static/js/main.51ee0397.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"nav_nav__Et1Bj\",\"item\":\"nav_item__3xsM5\",\"active\":\"nav_active__3a-2j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__3D0-C\"};","module.exports = __webpack_public_path__ + \"static/media/LogoF1.48d09aeb.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerImg\":\"header_headerImg__1fXoA\"};","module.exports = __webpack_public_path__ + \"static/media/LogoF2.2952645f.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"myPosts_myPosts__1z4Jy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"post_post__3BeDl\"};","module.exports = __webpack_public_path__ + \"static/media/Women1.c5901a19.jpg\";","import LogoF1 from \"./Images/LogoF1.png\";\r\nimport React from \"react\";\r\nimport s from \"./header.module.css\"\r\n\r\nfunction Header() {\r\n    return (\r\n        <header>\r\n            <div>\r\n                <img className={s.headerImg} src={LogoF1} alt=\"iso\"/>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport s from \"./footer.module.css\";\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <p className={s.footer}>© Петров С.В.</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport s from \"./nav.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Nav() {\r\n    return (\r\n            <div className={s.nav}>\r\n                <ul className={s.item}>\r\n                    <li>\r\n                        <NavLink to = \"/profile\" activeClassName={s.active}>Профиль</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to = \"/dialogs\" activeClassName={s.active}>Сообщения</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <a>Новости</a>\r\n                    </li>\r\n                    <li>\r\n                        <a>Музыка</a>\r\n                    </li>\r\n                    <li>\r\n                        <a>Настройки</a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Nav","import React from \"react\";\r\nimport s from \"./post.module.css\";\r\nimport Women1 from \"./Women1.jpg\"\r\n\r\ntype PropsType = {\r\n    message: string\r\n}\r\n\r\nfunction Post(props: PropsType) {\r\n    return (\r\n                <div className={s.post}>\r\n                    <img src={Women1} alt=\"iso\"/>\r\n                        {props.message}\r\n                </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from \"./myPosts.module.css\";\r\nimport Post from \"./Post/post\";\r\n\r\nfunction MyPosts() {\r\n    return (\r\n        <div className={s.myPosts}>\r\n            <h1>My posts</h1>\r\n            <div>\r\n<textarea>a</textarea>\r\n                <button>Add Post</button>\r\n            </div>\r\n            <div>\r\n                <Post message = \"Здравствуйте!\"/>\r\n                <Post message = \"Привет!\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import LogoF2 from \"./Images/LogoF2.jpg\";\r\nimport React from \"react\";\r\nimport s from \"./profile.module.css\";\r\nimport MyPosts from \"./MyPosts/myPosts\";\r\n\r\nfunction Profile() {\r\n    return (\r\n        <div className={s.profile}>\r\n            <div>\r\n                <img className={s.main} src={LogoF2} alt=\"iso\"/>\r\n            </div>\r\n            <div>\r\n                ava + description\r\n            </div>\r\n            <MyPosts/>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport s from \"./dialogs.module.css\";\r\n\r\nfunction Dialogs() {\r\n    return (\r\n        <div className={s.dialogs}>\r\n            Dialogs\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport './App.css';\r\nimport Header from \"./Components/Header/header\";\r\nimport Footer from \"./Components/Footer/footer\";\r\nimport Nav from \"./Components/Navigation/nav\";\r\nimport Profile from \"./Components/Profile/profile\";\r\nimport Dialogs from \"./Components/Dialogs/dialogs\";\r\nimport {BrowserRouter, Route} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n    return (\r\n        <BrowserRouter>\r\n        <div className=\"lyubaProject\">\r\n            <Header/>\r\n            <Nav/>\r\n            <div className=\"lyubaProjectContent\">\r\n                <Route path='/profile' component={Profile}/>\r\n                <Route path='/dialogs' component={Dialogs}/>\r\n            {/*<Profile/>*/}\r\n            {/*<Dialogs/>*/}\r\n            </div>\r\n            <Footer/>\r\n        </div>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}