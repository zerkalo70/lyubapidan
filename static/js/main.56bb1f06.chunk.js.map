{"version":3,"sources":["api/api.ts","redux/dialogsReducer.ts","assets/Images/Women3.jpg","Components/Users/users.module.css","assets/Images/loading5.gif","Components/common/Preloader/preloader.module.css","Components/Header/Images/LogoF1.png","Components/common/FormsControls/FormsControls.tsx","serviceWorker.ts","redux/sidebarReducer.ts","utils/objectHelpers.ts","redux/usersReducer.ts","redux/authReducer.ts","redux/appReducer.ts","redux/reduxStore.ts","Components/Footer/footer.tsx","Components/Navigation/nav.tsx","Components/common/Paginator/Paginator.tsx","Components/Users/user.tsx","Components/Users/users.tsx","redux/usersSelectors.ts","Components/Users/usersContainer.tsx","Components/Header/header.tsx","Components/Header/headerContainer.tsx","Components/Login/login.tsx","hoc/withSuspense.tsx","App.tsx","index.tsx","Components/common/Preloader/preloader.tsx","Components/Navigation/nav.module.css","Components/common/FormsControls/FormsControls.module.css","utils/validators/validators.ts","Components/common/Paginator/Paginator.module.css","Components/Header/header.module.css","redux/profileReducer.ts","hoc/withAuthRedirect.tsx"],"names":["instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","initialState","dialogs","id","name","messages","message","sendMessageAC","newMessageBody","type","dialogsReducer","state","action","body","module","exports","FormControl","input","meta","touched","error","children","hasError","className","s","formControl","Textarea","props","restProps","child","Input","createField","placeholder","validators","component","text","validate","Boolean","window","location","hostname","match","sidebarReducer","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","count","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","filter","SET_USER_DATA","isAuth","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","url","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","usersPage","auth","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","Footer","footer","Nav","nav","item","to","activeClassName","active","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","p","cn","selectedPage","pageNumber","key","e","User","user","src","photos","small","Women3","alt","styles","userPhoto","disabled","some","Users","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","React","Component","compose","withAuthRedirect","connect","bind","page","totalCount","Header","headerImg","LogoF1","loginBlock","HeaderContainer","LoginReduxForm","reduxForm","handleSubmit","onSubmit","required","formSummaryError","length","stopSubmit","_error","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","withRouter","promise","Promise","all","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","Preloader","preloader","loading5","value","maxLengthCreator","maxLength","posts","likesCount","addPostAC","newPostText","setStatus","getUserProfile","file","getState","reject","newPost","postId","mapStateToPropsForRedirect","RedirectComponent"],"mappings":"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","file":"static/js/main.56bb1f06.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"bf102d8c-cfd2-4d9c-a6c8-a4c689dcc873\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: any, pageSize: any) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then((response: any) => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId: any) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId: any) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId: any) {\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: any) {\r\n        return instance.get('profile/' + userId);\r\n    },\r\n    getStatus(userId: any) {\r\n        return instance.get('profile/status/' + userId);\r\n    },\r\n    updateStatus(status: any) {\r\n        return instance.put('profile/status', {status: status});\r\n    },\r\n    savePhoto(photoFile: any) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n        return instance.put('profile/photo', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile: any) {\r\n        return instance.put('profile', profile);\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`, {});\r\n    },\r\n    login(email: any, password: any, rememberMe: any = false, captcha: any = null) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`);\r\n    }\r\n}\r\n\r\n","\r\n\r\nexport type DialogsActionsTypes = ReturnType<typeof sendMessageAC>\r\n\r\nconst SEND_MESSAGE = \"SEND-MESSAGE\";\r\n\r\nlet initialState: any= {\r\n    dialogs: [\r\n        {id: 1, name: 'Люба'},\r\n        {id: 2, name: 'Маша'},\r\n        {id: 3, name: 'Даша'}\r\n    ],\r\n\r\n    messages: [\r\n        {id: 1, message: 'Я Вас приветствую!'},\r\n        {id: 2, message: 'Привет!'},\r\n        {id: 3, message: 'Здорово!'}\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action: DialogsActionsTypes) => {\r\n\r\nswitch (action.type) {\r\n\r\n    case SEND_MESSAGE:\r\n        let body = action.newMessageBody;\r\n        return {\r\n            ...state,\r\n        messages: [...state.messages, {id: 6, message: body}]\r\n        };\r\n\r\n    default:\r\n        return state\r\n    }\r\n}\r\nexport const sendMessageAC = (newMessageBody: any) => {\r\n    return {\r\n        type: \"SEND-MESSAGE\", newMessageBody\r\n    } as const\r\n}\r\n\r\n\r\nexport default dialogsReducer;","module.exports = __webpack_public_path__ + \"static/media/Women3.2574b695.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__1tEe4\"};","module.exports = __webpack_public_path__ + \"static/media/loading5.1fd5be2e.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"preloader_preloader__2CynD\"};","module.exports = __webpack_public_path__ + \"static/media/LogoF1.48d09aeb.png\";","import React from \"react\";\r\nimport s from \"./FormsControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}: any) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props: any) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props: any) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder: any, name: any, validators: any,\r\n                            component: any, props: any = {}, text: any = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder}\r\n               name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}/> {text}\r\n    </div>\r\n)\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","\r\n\r\nlet initialState = {}\r\n\r\nconst sidebarReducer = (state = initialState, action: any) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","\r\nexport const updateObjectInArray = (items: any, itemId: any, objPropName: any, newObjProps: any) => {\r\n    return items.map((u: any) => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","\r\nimport {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/objectHelpers\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\nlet initialState: any = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state: any = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId,\r\n                    \"id\", {followed: true})\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId,\r\n                    \"id\", {followed: false})\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state, users: action.users\r\n            }\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state, totalUsersCount: action.count\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n            case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter((id: any) => id != action.userId)\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const followSuccess: any = (userId: any) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess: any = (userId: any) => ({type: UNFOLLOW, userId});\r\nexport const setUsers: any = (users: any) => ({type: SET_USERS, users});\r\nexport const setCurrentPage: any = (currentPage: any) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount: any = (totalUsersCount: any) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const toggleIsFetching: any = (isFetching: any) => ({type: TOGGLE_IS_FETCHING, count: isFetching});\r\nexport const toggleFollowingProgress: any = (isFetching: any, userId: any) =>\r\n    ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId});\r\n\r\nexport const requestUsers = (page: any, pageSize: any) => {\r\n    return async (dispatch: any) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(page));\r\n\r\n    let data = await usersAPI.getUsers(page, pageSize);\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch: any, userId: any, apiMethod: any, actionCreator: any) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    const response = await apiMethod(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId: any) => {\r\n    return async (dispatch: any) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\nexport const unfollow = (userId: any) => {\r\n    return async (dispatch: any) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer;","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\nconst SET_USER_DATA = \"lyubapidan/auth/SET_USER_DATA\";\r\nconst GET_CAPTCHA_URL_SUCCESS = \"lyubapidan/auth/GET_CAPTCHA_URL_SUCCESS\";\r\n\r\nlet initialState: any = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n};\r\n\r\nconst authReducer = (state: any = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData: any = (userId: any, email: any, login: any, isAuth: any) =>\r\n    ({type: SET_USER_DATA, payload: {userId, email, login, isAuth}});\r\n\r\nexport const getCaptchaUrlSuccess: any = (captchaUrl: any) =>\r\n    ({type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}});\r\n\r\nexport const getAuthUserData: any = () => async (dispatch: any) => {\r\n    const response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login: any = (email: any, password: any, rememberMe: any, captcha: any) => async (dispatch: any) => {\r\n    const response = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n        let message = response.data.messages.length > 0\r\n            ? response.data.messages[0]\r\n            : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl: any = () => async (dispatch: any) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n}\r\n\r\nexport const logout: any = () => async (dispatch: any) => {\r\n    const response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","import {getAuthUserData} from \"./authReducer\";\r\n\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\r\n\r\nlet initialState: any = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state: any = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess: any = () => ({type: INITIALIZED_SUCCESS});\r\nexport const initializeApp: any = () => (dispatch: any) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n}\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport sidebarReducer from \"./sidebarReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import React from \"react\";\r\nimport s from \"./footer.module.css\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p className={s.footer}>© Петров С.В.</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport s from \"./nav.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Nav = () => {\r\n    return (\r\n            <div className={s.nav}>\r\n                <ul className={s.item}>\r\n                    <li>\r\n                        <NavLink to = {\"/profile\"} activeClassName={s.active}>\r\n                            Профиль</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to = {\"/dialogs\"} activeClassName={s.active}>\r\n                            Сообщения</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to = {\"/users\"} activeClassName={s.active}>\r\n                            Пользователи</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <a>Музыка</a>\r\n                    </li>\r\n                    <li>\r\n                        <a>Настройки</a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React, {useState} from \"react\";\r\nimport s from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}: any) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className={s.paginator}>\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => {setPortionNumber(portionNumber - 1)}}>PREV</button>}\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p) => {\r\n                    return <span className={cn({\r\n                        [s.selectedPage]: currentPage === p\r\n                    }, s.pageNumber)}\r\n                                 key={p}\r\n                                 onClick={(e) => {\r\n                                     onPageChanged(p);\r\n                                 }}>{p}</span>\r\n\r\n                })}\r\n            {portionCount > portionNumber &&\r\n            <button onClick={() => {setPortionNumber(portionNumber + 1)}}>NEXT</button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator;","import React from \"react\";\r\nimport styles from \"./users.module.css\";\r\nimport Women3 from \"../../assets/Images/Women3.jpg\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}: any) => {\r\n\r\n    return (\r\n        <div>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={'/profile/' + user.id}>\r\n                            <img src={user.photos.small != null ? user.photos.small : Women3} alt=\"iso\"\r\n                                 className={styles.userPhoto}/>\r\n                                 </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {user.followed\r\n                                ? <button disabled={followingInProgress.some((id: any) => id === user.id)}\r\n                                          onClick={() => {\r\n                                              unfollow(user.id);\r\n                                          }}>Unfollow</button>\r\n                                : <button disabled={followingInProgress.some((id: any) => id === user.id)}\r\n                                          onClick={() => {\r\n                                              follow(user.id);\r\n                                          }}>follow</button>}\r\n                        </div>\r\n                    </span>\r\n            <span>\r\n                        <span>\r\n                            <div>{user.name}</div>\r\n                            <div>{user.status}</div>\r\n                        </span>\r\n                        <span>\r\n                            <div>{\"user.location.country\"}</div>\r\n                            <div>{\"user.location.city\"}</div>\r\n                        </span>\r\n                    </span>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default User;","import React from \"react\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./user\";\r\n\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}: any) => {\r\n\r\n    return (\r\n        <div>\r\n            <Paginator currentPage={currentPage}\r\n                       onPageChanged={onPageChanged}\r\n                       totalItemsCount={totalUsersCount}\r\n                       pageSize={pageSize}/>\r\n            <div>\r\n                {\r\n                    users.map((u: any) => <User user={u}\r\n                                                followingInProgress={props.followingInProgress}\r\n                                                key={u.id}\r\n                                                unfollow={props.unfollow}\r\n                                                follow={props.follow}/>)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","export const getUsers = (state: any) => {\r\n    return state.usersPage.users;\r\n}\r\nexport const getPageSize = (state: any) => {\r\n    return state.usersPage.pageSize;\r\n}\r\nexport const getTotalUsersCount = (state: any) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\nexport const getCurrentPage = (state: any) => {\r\n    return state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching = (state: any) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state: any) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow, setCurrentPage,\r\n    unfollow, toggleFollowingProgress, requestUsers\r\n} from \"../../redux/usersReducer\";\r\nimport Users from \"./users\";\r\nimport Preloader from \"../common/Preloader/preloader\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/usersSelectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component<any, any> {\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber: any) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                followingInProgress={this.props.followingInProgress}/>\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: any) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps,\r\n    {follow, unfollow, setCurrentPage,\r\n    toggleFollowingProgress, getUsers: requestUsers })\r\n\r\n)(UsersContainer);\r\n","import LogoF1 from \"./Images/LogoF1.png\";\r\nimport React from \"react\";\r\nimport s from \"./header.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header: any = (props: any) => {\r\n    return (\r\n        <header>\r\n            <div>\r\n                <img className={s.headerImg} src={LogoF1} alt=\"iso\"/>\r\n                <div className={s.loginBlock}>\r\n                    {props.isAuth\r\n                        ? <div>{props.login} - <button onClick={props.logout}>Logout</button></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport Header from \"./header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/authReducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component<any, any> {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\nconst mapStateToProps = (state: any) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from \"./../common/FormsControls/FormsControls.module.css\"\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}: any) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n\r\n                {createField(\"email\", \"email\", [required], Input, {})}\r\n                {createField(\"Password\", \"password\", [required], Input,\r\n                    {type: \"password\"})}\r\n                    {createField(null, \"rememberMe\", [], Input,\r\n                    {type: \"checkbox\"}, \"remember me\")}\r\n\r\n            {captchaUrl && <img src={captchaUrl}/>}\r\n            {captchaUrl &&\r\n            createField(\"Symbols from image\", \"captcha\", [required], Input, {})}\r\n\r\n            {error && <div className={s.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm: any = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst Login = (props: any) => {\r\n    const onSubmit = (formData: any) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>LOGIN</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, {login})(Login);","import React from \"react\";\r\nimport Preloader from \"../Components/common/Preloader/preloader\";\r\n\r\n\r\nexport const withSuspense = (Component: any) => {\r\n    return (props: any) => {\r\n        return <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Footer from \"./Components/Footer/footer\";\r\nimport Nav from \"./Components/Navigation/nav\";\r\nimport {Route} from \"react-router-dom\";\r\nimport UsersContainer from \"./Components/Users/usersContainer\";\r\nimport HeaderContainer from \"./Components/Header/headerContainer\";\r\nimport Login from \"./Components/Login/login\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {initializeApp} from \"./redux/appReducer\";\r\nimport Preloader from \"./Components/common/Preloader/preloader\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n\r\nconst DialogsContainer = React.lazy(() => import('./Components/Dialogs/dialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./Components/Profile/profileContainer'));\r\n\r\nclass App extends React.Component<any, any> {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <div className=\"lyubaProject\">\r\n                <HeaderContainer/>\r\n                <Nav/>\r\n                <div className=\"lyubaProjectContent\">\r\n\r\n                    <Route path='/profile/:userId?'\r\n                           render={withSuspense(ProfileContainer)}/>\r\n\r\n                    <Route path='/dialogs'\r\n                           render={withSuspense(DialogsContainer)}/>\r\n\r\n                    <Route path='/users'\r\n                           render={() => <UsersContainer/>}/>\r\n\r\n                    <Route path='/login'\r\n                           render={() => <Login/>}/>\r\n\r\n                </div>\r\n                <Footer/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nexport default compose<any>(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n","import React from 'react';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from \"./redux/reduxStore\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n    ReactDOM.render(\r\n        <HashRouter>\r\n        <React.StrictMode>\r\n            <Provider store={store}>\r\n            <App/>\r\n            </Provider>\r\n        </React.StrictMode>\r\n        </HashRouter>, document.getElementById('root')\r\n    );\r\n\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from \"react\";\r\nimport loading5 from \"../../../assets/Images/loading5.gif\";\r\nimport s from \"./preloader.module.css\"\r\n\r\nlet Preloader: any = () => {\r\n    return <div className={s.preloader}>\r\n        <img src={loading5} alt=\"iso\"/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"nav_nav__Et1Bj\",\"item\":\"nav_item__3xsM5\",\"active\":\"nav_active__3a-2j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__38Qy8\",\"error\":\"FormsControls_error__3PUh4\",\"formSummaryError\":\"FormsControls_formSummaryError__3V1nd\"};","export const required = (value: any) => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\nexport const maxLengthCreator = (maxLength: any) => (value: any) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__3ANv7\",\"pageNumber\":\"Paginator_pageNumber__1u7Wo\",\"selectedPage\":\"Paginator_selectedPage__1ka_0\",\"Page\":\"Paginator_Page__2ppx8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerImg\":\"header_headerImg__1fXoA\",\"loginBlock\":\"header_loginBlock__uq75i\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nexport type ProfileActionsTypes = ReturnType<typeof addPostAC>\r\n\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\nconst DELETE_POST = \"DELETE_POST\";\r\nconst SAVE_PHOTO_SUCCESS = \"SAVE_PHOTO_SUCCESS\";\r\n\r\nlet initialState: any = {\r\n    posts: [\r\n        {id: 1, message: 'Привет', likesCount: 12},\r\n        {id: 2, message: 'Это мой первый пост!', likesCount: 21}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n}\r\n\r\nconst profileReducer = (state = initialState, action: ProfileActionsTypes) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            const newPost: any = {\r\n                id: 3,\r\n                message: action.newPostText,\r\n                likesCount: 10\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: \"\"\r\n            };\r\n\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return {...state, profile: action.profile}\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter((p: any) => p.id != action.postId)}\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {...state, profile: {...state.profile, photos: action.photos}}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPostAC: any = (newPostText: any) => ({type: ADD_POST, newPostText}) as const\r\nexport const setUserProfile: any = (profile: any) => ({type: SET_USER_PROFILE, profile}) as const\r\nexport const setStatus: any = (status: any) => ({type: SET_STATUS, status}) as const\r\nexport const deletePost: any = (postId: any) => ({type: DELETE_POST, postId}) as const\r\nexport const getUserProfile: any = (userId: any) => async (dispatch: any) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\nexport const savePhotoSuccess: any = (photos: any) => ({type: SAVE_PHOTO_SUCCESS, photos}) as const\r\n\r\nexport const getStatus: any = (userId: any) => async (dispatch: any) => {\r\n    const response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\nexport const updateStatus: any = (status: any) => async (dispatch: any) => {\r\n    const response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\nexport const savePhoto: any = (file: any) => async (dispatch: any) => {\r\n    const response = await profileAPI.savePhoto(file);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\n\r\nexport const saveProfile: any = (profile: any) => async (dispatch: any, getState: any) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    }else {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0]}));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default profileReducer;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state: any) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component: any) => {\r\n    class RedirectComponent extends React.Component<any, any> {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\"/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}"],"sourceRoot":""}